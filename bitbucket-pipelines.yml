# This is a sample build configuration for JavaScript.
# Check our guides at https://confluence.atlassian.com/x/14UWN for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can speify a custom docker image from Docker Hub as your build environment.
image: node:16.16.0

pipelines:
  branches:
    master:
      - step:
          name: Build and test
          image: node:16.16.0
          script:
            - npm install --legacy-peer-deps
      - step:
          trigger: manual # uncomment to have a manual step
          # set AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY as environment variables
          name: Deploy to EKS
          deployment: production # set to test, staging or production

          image: atlassian/pipelines-awscli
          services:
            - docker
          script:
            # ECS variables
            - export AWS_DEFAULT_REGION=ap-south-1
            - export ECS_CLUSTER_NAME=$ECS_PREFIX
            - export ECS_SERVICE_NAME=$ECS_PREFIX-service
            - export ECS_TASK_NAME=$ECS_PREFIX-task
            - export LOG_GROUP=$ECS_PREFIX
            - export FAMILY=extension

            # aws login
            - eval $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)

            # docker
            - export BUILD_ID=$BITBUCKET_BRANCH_$BITBUCKET_COMMIT_$BITBUCKET_BUILD_NUMBER
            - export IMAGE_NAME=$AWS_REGISTRY_URL/$ECS_CLUSTER_NAME:$BUILD_ID
            - docker build -t $IMAGE_NAME -t $AWS_REGISTRY_URL/$ECS_CLUSTER_NAME:latest .
            - docker push -a $AWS_REGISTRY_URL/$ECS_CLUSTER_NAME
            # docker tag $IMAGE_NAME $AWS_REGISTRY_URL:$ECS_CLUSTER_NAME-v$BUILD_ID
            # docker push $AWS_REGISTRY_URL:$ECS_CLUSTER_NAME-v$BUILD_ID
definitions:
  services:
    docker:
      memory: 2048 # reduce memory for docker-in-docker from 1GB to 512MB